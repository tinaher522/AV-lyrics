#!/usr/bin/env python
"""transform_csv.py

Tool to generate the files database.
The <artist_list> list must be align with <cover_artist> list.

Description of files:
  <tracklist>     CSV file with fields:
                      sequencial
                      videolink
                      gender
                      cartist
                      youtubechannel
                      artist
                      song
                      instrument

Usage:
  transform_csv.py  <tracklist> <outroute> [-a]
  transform_csv.py  --help

Options:
  <tracklist>     Name of the file that contain the artist and song list.
  <outroute>      Name of directory for output files     
  -a, --append    Append new lyrics into collection, rewrite otherwise
  --help          Print this help screen
"""

import csv
import sys

import docopt

from lyrics.tools import helps


def gen_database(tracklist, outroute, append):
    print "Extracting data from",  tracklist, "..."
 
    with open(tracklist, 'rb') as csvfile:
        videolink = []
        gender = []
        cartist = []
        youtubechannel = []
        artist = []
        song = []
        instrument = []
        
        reader = csv.DictReader(csvfile)
        try:
            for row in reader:
                videolink.append(row['videolink'])
                gender.append(row['gender'])
                cartist.append(row['cartist'])
                youtubechannel.append(row['youtubechannel'])
                artist.append(row['artist'])
                song.append(row['song'])
                instrument.append(row['instrument'])
        except csv.Error as e:
            sys.exit('file %s, line %d: %s' % (tracklist, reader.line_num, e))
    
    
    # Save VideoLinks
    fil_vl = outroute + "/Video_Links.txt"
    helps.ensure_dir(fil_vl)
    if append==1:
        f = open(fil_vl, 'ab')
    else:
        f = open(fil_vl, 'wab')
        
    for i in range(len(videolink)):
        f.write(videolink[i] + "\n")
    f.close
    print "File", fil_vl, "...created"
    
    # Save Artist_Song
    fil_as = outroute + "/Artist_Song.txt"
    helps.ensure_dir(fil_as)
    if append==1:
        f = open(fil_as, 'ab')
    else:
        f = open(fil_as, 'wab')
        
    for i in range(len(artist)):
        f.write(artist[i] + "," + song[i] + "\n")
    f.close
    print "File", fil_as, "...created"
    
    # Save Cover_artist
    fil_ca = outroute + "/Cover_Artist.txt"
    helps.ensure_dir(fil_ca)
    if append==1:
        f = open(fil_ca, 'ab')
    else:
        f = open(fil_ca, 'wab')
        
    for i in range(len(artist)):
        f.write(gender[i] + "," + cartist[i] + "," + str(instrument[i]) + "," + str(youtubechannel[i]) + "\n")
    f.close
    print "File", fil_ca, "...created"    
    
    fil_rm = outroute + "/Extracted_Files.md"
    f = open(fil_rm, 'wab')
    f.write("#Extraction of CSV\n\n")
    f.write("The files in this folder were generated by **/tools/database/transform_csv.py** tool\n\n")
    f.write("#Files Description\n")
    f.write("1. Video_Links.txt  : is necessary for downloading audio from Internet. " +\
            "Batch file used with *youtube-dl* program.\n")
    f.write("2. Artist_Song.txt  : is necessary for generate the id for each Artist-Song pair\n")
    f.write("3. Cover_Artist.txt : is necessary for generate the id for each pair cover artist\n\n")
    f.write("The content of each folder are **NOT** necessarily unique.\n")
    f.write("Each line of the file " + tracklist + " match with the same line of the generated files\n")
    f.close
    print "File", fil_rm, "...created"
    
    print "...done"
      
    

def main():
    """Main method called from commandline."""
    arguments = docopt.docopt(__doc__)
    tracklist = arguments['<tracklist>']
    outroute = arguments['<outroute>']
    append = 0
    if arguments['--append']:
        append = 1
    gen_database(tracklist, outroute, append)

if __name__ == '__main__':
    main()
